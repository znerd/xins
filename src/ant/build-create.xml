<?xml version="1.0" encoding="US-ASCII" ?>
<project name="xins-create" basedir=".">

	<target name="create-api" description="Generates a new api specification file.">
		<input addproperty="api.name"
		       message="Please, enter the name of the api (in lowercase):" />
		<property name="api.specdir" value="apis/${api.name}/spec" />
		<mkdir dir="${api.specdir}" />
		<property name="xml.file" value="${api.specdir}/api.xml" />
		<available property="xml.exists" file="${xml.file}" />
		<fail message="The file ${xml.file} already exists!" if="xml.exists" />
		<input addproperty="api.description"
		       message="Please, enter the description of the new api:" />
		<echo file="${xml.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE api PUBLIC "-//XINS//DTD XINS API 3.0//EN" "http://www.xins.org/dtd/api_3_0.dtd">

<api name="]]>${api.name}"<![CDATA[
rcsversion="$]]><![CDATA[Revision$" rcsdate="$]]><![CDATA[Date$">

	<description>]]>${api.description}<![CDATA[</description>

</api>]]></echo>
		<fixcrlf srcdir="${api.specdir}" includes="api.xml" />
		<replace file="xins-project.xml">
			<replacetoken><![CDATA[</project>]]></replacetoken>
			<replacevalue><![CDATA[	<api name="]]>${api.name}<![CDATA[" />
</project>]]></replacevalue>
		</replace>
		<input message="Do you want to create an implementation for the API (y/n)?"
		       validargs="y,n"
		       addproperty="do.implementation" />
		<condition property="create.impl">
			<equals arg1="y" arg2="${do.implementation}"/>
		</condition>
		<antcall target="create-impl" />
		<input message="Do you want to define some environments for the API (y/n)?"
		       validargs="y,n"
		       addproperty="do.environments" />
		<condition property="create.environments">
			<equals arg1="y" arg2="${do.environments}"/>
		</condition>
		<antcall target="create-environments" />
		<replace file="xins-project.xml" token="$${api.name}" value="${api.name}" />
		<antcall target="create-function" />
	</target>

	<target name="create-impl" if="create.impl">
		<property name="api.impldir" value="apis/${api.name}/impl" />
		<mkdir dir="${api.impldir}" />
		<property name="impl.file" value="${api.impldir}/impl.xml" />
		<available property="impl.exists" file="${impl.file}" />
		<fail message="The file ${impl.file} already exists!" if="impl.exists" />
		<echo file="${impl.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE impl PUBLIC "-//XINS//DTD Implementation 3.0//EN" "http://www.xins.org/dtd/impl_3_0.dtd">
<!-- The order of the elements is logdoc, bootstrap-properties, runtime-properties, content, dependency, calling-convention, instance. -->
<impl>
</impl>
]]></echo>
		<fixcrlf srcdir="${api.impldir}" includes="impl.xml" />
		<replace file="xins-project.xml">
			<replacetoken><![CDATA[	<api name="]]>${api.name}<![CDATA[" />]]></replacetoken>
			<replacevalue><![CDATA[	<api name="]]>${api.name}<![CDATA[">
		<impl />
	</api>]]></replacevalue>
		</replace>
	</target>

	<target name="create-environments" if="create.environments">
		<property name="environments.file" value="apis/${api.name}/environments.xml" />
		<available property="environments.exists" file="${environments.file}" />
		<fail message="The file ${environments.file} already exists!" if="environments.exists" />
		<echo file="${environments.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE environments PUBLIC "-//XINS//DTD Environments 3.0//EN" "http://www.xins.org/dtd/environments_3_0.dtd">

<environments>

	<environment id="localhost" url="http://127.0.0.1:8080/]]>${api.name}<![CDATA[/" />

</environments>
]]></echo>
		<fixcrlf srcdir="apis/${api.name}" includes="environments.xml" />
		<replace file="xins-project.xml">
			<replacetoken><![CDATA[	<api name="]]>${api.name}<![CDATA[" />]]></replacetoken>
			<replacevalue><![CDATA[	<api name="]]>${api.name}<![CDATA[">
		<environments />
	</api>]]></replacevalue>
		</replace>
		<replace file="xins-project.xml">
			<replacetoken><![CDATA[	<api name="]]>${api.name}<![CDATA[">
		<impl />
	</api>]]></replacetoken>
			<replacevalue><![CDATA[	<api name="]]>${api.name}<![CDATA[">
		<impl />
		<environments />
	</api>]]></replacevalue>
		</replace>
	</target>

	<target name="create-function" description="Generates a new function specification file.">
		<input addproperty="api.name"
		       message="Please, enter the name of the api:" />
		<input addproperty="function.name"
		       message="Please, enter the name of the new function:" />
		<property name="fnc.file" value="apis/${api.name}/spec/${function.name}.fnc" />
		<available property="xml.exists" file="${fnc.file}" />
		<fail message="The file ${fnc.file} already exists!" if="xml.exists" />
		<input addproperty="function.description"
		       message="Please, enter the description of the new function:" />
		<echo file="${fnc.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE function PUBLIC "-//XINS//DTD Function 3.0//EN" "http://www.xins.org/dtd/function_3_0.dtd">

<function name="]]>${function.name}<![CDATA["
rcsversion="$]]><![CDATA[Revision$" rcsdate="$]]><![CDATA[Date$">

	<description>]]>${function.description}<![CDATA[</description>

	<input>
		<param name="inputexample" required="false" type="_text">
			<description>Input example</description>
		</param>
	</input>
	<output>
	</output>
</function>]]></echo>
		<fixcrlf srcdir="apis/${api.name}/spec" includes="${function.name}.fnc" />
		<replace file="apis/${api.name}/spec/api.xml">
			<replacetoken><![CDATA[</description>

]]></replacetoken>
			<replacevalue><![CDATA[</description>

	<function name="]]>${function.name}<![CDATA[" />
]]></replacevalue>
		</replace>
		<replace file="apis/${api.name}/spec/api.xml" token="$${function.name}" value="${function.name}" />
		<!-- Make sure that there is always a blank line before the </api> -->
		<replace file="apis/${api.name}/spec/api.xml">
			<replacetoken><![CDATA[/>
</api>]]></replacetoken>
			<replacevalue><![CDATA[/>

</api>]]></replacevalue>
		</replace>
		<!--echo message="Don't forget to add &lt;function name=&quot;${function.name}&quot; /&gt; to the api.xml file." /-->
	</target>

	<target name="create-rcd" description="Generates a new result code specification file.">
		<input addproperty="api.name"
		       message="Please, enter the name of the api:" />
		<input addproperty="rcd.name"
		       message="Please, enter the name of the new result code:" />
		<property name="rcd.file" value="apis/${api.name}/spec/${rcd.name}.rcd" />
		<available property="xml.exists" file="${rcd.file}" />
		<fail message="The file ${rcd.file} already exists!" if="xml.exists" />
		<input addproperty="rcd.description"
		       message="Please, enter the description of the new result code:" />
		<echo file="${rcd.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE resultcode PUBLIC "-//XINS//DTD Result Code 3.0//EN" "http://www.xins.org/dtd/resultcode_3_0.dtd">

<resultcode name="]]>${rcd.name}<![CDATA["
rcsversion="$]]><![CDATA[Revision$" rcsdate="$]]><![CDATA[Date$">

	<description>]]>${rcd.description}<![CDATA[</description>

</resultcode>]]></echo>
		<fixcrlf srcdir="apis/${api.name}/spec" includes="${rcd.name}.rcd" />
		<replace file="apis/${api.name}/spec/api.xml">
			<replacetoken><![CDATA[
</api>]]></replacetoken>
			<replacevalue><![CDATA[
	<resultcode name="]]>${rcd.name}<![CDATA[" />
</api>]]></replacevalue>
		</replace>
		<replace file="apis/${api.name}/spec/api.xml" token="$${rcd.name}" value="${rcd.name}" />
		<!--echo message="Don't forget to add &lt;resultcode name=&quot;${rcd.name}&quot; /&gt; to the api.xml file." /-->
	</target>

	<target name="create-type" description="Generates a new type specification file.">
		<input addproperty="api.name"
		       message="Please, enter the name of the api:" />
		<input addproperty="type.name"
		       message="Please, enter the name of the new type:" />
		<property name="typ.file" value="apis/${api.name}/spec/${type.name}.typ" />
		<available property="xml.exists" file="${typ.file}" />
		<fail message="The file ${typ.file} already exists!" if="xml.exists" />
		<input addproperty="type.description"
		       message="Please, enter the description of the new type:" />
		<echo file="${typ.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE type PUBLIC "-//XINS//DTD Type 3.0//EN" "http://www.xins.org/dtd/type_3_0.dtd">

<type name="]]>${type.name}<![CDATA[" rcsversion="$]]><![CDATA[Revision$" rcsdate="$]]><![CDATA[Date$">

	<description>]]>${type.description}<![CDATA[</description>

</type>]]></echo>
		<fixcrlf srcdir="apis/${api.name}/spec" includes="${type.name}.typ" />
		<echo message="Don't forget to add &lt;type name=&quot;${type.name}&quot; /&gt; to the api.xml file." />
	</target>

	<target name="create-logdoc" description="Generates a new logdoc file for the API.">
		<input addproperty="api.name"
		       message="Please, enter the name of the api:" />
		<property name="log.file" value="apis/${api.name}/impl/log.xml" />
		<property name="log.file2" value="apis/${api.name}/impl/translation-bundle-en_US.xml" />
		<available property="xml.exists" file="${log.file}" />
		<available property="xml.exists2" file="${log.file2}" />
		<fail message="The file ${log.file} already exists!" if="xml.exists" />
		<fail message="The file ${log.file2} already exists!" if="xml.exists2" />
		<echo file="${log.file}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log PUBLIC "-//Logdoc//DTD Logdoc 3.0//EN" "http://www.xins.org/dtd/log_3_0.dtd">

<log>

	<translation-bundle locale="en_US" />

	<group id="exampleid" name="Example">
		<entry id="10000" level="DEBUG">
			<description>Example of logdoc with some parameters.</description>
			<param name="parameter" />
			<param name="number" nullable="false" type="int32" />
		</entry>
		<entry id="10001" level="ERROR" exception="true">
			<description>Example with an exception.</description>
		</entry>
	</group>
</log>
]]></echo>
		<echo file="${log.file2}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE translation-bundle PUBLIC "-//Logdoc//DTD Translation Bundle 3.0//EN" "http://www.xins.org/dtd/translation-bundle_3_0.dtd">

<translation-bundle>
	<translation entry="10000">Example of logdoc with the parameter <value-of-param name="parameter" format="quoted" /> and <value-of-param name="number" />.</translation>
	<translation entry="10001">Example of an exception.</translation>
</translation-bundle>
]]></echo>
		<fixcrlf srcdir="apis/${api.name}/impl" includes="log.xml translation-bundle-en_US.xml" />
		<replace file="apis/${api.name}/impl/impl.xml">
			<replacetoken><![CDATA[<impl>]]></replacetoken>
			<replacevalue><![CDATA[<impl>
	<logdoc />]]></replacevalue>
		</replace>
		<echo message="The logdoc files have been created in the apis/${api.name}/impl directory." />
	</target>

	<target name="create-example" description="Generates the specification of an exmaple.">
		<taskdef name="createexample" classname="org.xins.common.ant.CreateExampleTask">
			<classpath>
				<fileset dir="${xins_home}/build" includes="*.jar"/>
				<fileset dir="${xins_home}/lib" includes="*.jar"/>
			</classpath>
		</taskdef>
		<input addproperty="api.name"
		       message="Please, enter the name of the api:" />
		<input addproperty="request.url"
		       message="Please, enter the full URL to query the API function:" />
		<createexample requestURL="${request.url}"
		               xslLocation="${xins_home}/src/xslt/create_example.xslt"
		               functionProperty="function.name"
		               exampleProperty="example.xml" />
		<!-- remove later this echo line as the example is added to the file. -->
		<echo message="${example.xml}" />
		<replace file="apis/${api.name}/spec/${function.name}.fnc">
			<replacetoken><![CDATA[
</function>]]></replacetoken>
			<replacevalue><![CDATA[
]]>${example.xml}<![CDATA[</function>]]></replacevalue>
		</replace>
		<replace file="apis/${api.name}/spec/${function.name}.fnc" token="$${example.xml}" value="${example.xml}" />
	</target>
</project>
